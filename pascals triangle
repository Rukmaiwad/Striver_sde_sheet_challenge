 links:  leetcode::https://leetcode.com/problems/pascals-triangle/
         codestudio::https://www.codingninjas.com/codestudio/problems/pascal-s-triangle_8230805?challengeSlug=striver-sde-challenge&leftPanelTab=1
 python code:
 class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        list1=[]
        for i in range(numRows):
            list2=[]
            for j in range(i+1):
                if j==0 or j==i:
                    list2.append(1)
                else:
                    list2.append(list1[i-1][j-1]+list1[i-1][j])
            list1.append(list2)
        return list1 
************Approach 2*************
def pascallist(row):
    res=[]
    ans=1
    res.append(1)
    for col in range(1,row):
        ans*=row-col
        ans//=col
        res.append(int(ans))
    return res 
def printPascal(n:int):
    # Write your code here.
    # Return a list of lists.
    res_ans=[]
    
    for i in range(1,n+1):
        res_ans.append(pascallist(i))
    return res_ans
    pass
