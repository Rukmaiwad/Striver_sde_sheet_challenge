*************sort 0 1 2***code studio***********
from os import *
from sys import *
from collections import *
from math import *

from sys import stdin,setrecursionlimit
setrecursionlimit(10**7)

def sort012(arr, n) :
    i=0
    j=len(arr)-1
    k=0
    while k<=j:
        if arr[k]==0:
            arr[i],arr[k]=arr[k],arr[i]
            i+=1
        if arr[k]==2:
            arr[j],arr[k]=arr[k],arr[j]
            j-=1
        else:
            k+=1

	# write your code here
    # don't return anything 
    pass


#taking inpit using fast I/O
def takeInput() :
	n = int(input().strip())

	if n == 0 :
		return list(), 0

	arr = list(map(int, stdin.readline().strip().split(" ")))

	return arr, n



def printAnswer(arr, n) :
    
    for i in range(n) :
        
        print(arr[i],end=" ")
        
    print()
    
#main

t = int(input().strip())
for i in range(t) :

    arr, n= takeInput()
    sort012(arr, n)
    printAnswer(arr, n)
    
    
    **************75.sort colors***LEETCODE*******************
    class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        i=0
        j=len(nums)-1
        k=0
        while k<=j:
            if nums[k]==0:
                nums[i],nums[k]=nums[k],nums[i]
                i+=1
                
            if nums[k]==2:
                nums[j],nums[k]=nums[k],nums[j]
                
                j-=1
            else:
                k+=1
